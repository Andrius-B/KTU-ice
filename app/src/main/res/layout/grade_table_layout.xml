<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="horizontal"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:baselineAligned="true"
    android:weightSum="2">
    <LinearLayout
        android:orientation="vertical"
        android:id="@+id/grade_table_headers"
        android:layout_weight="0.5"
        android:layout_width="0dp"
        android:layout_height="match_parent"/>
    <HorizontalScrollView
        android:background="#ffefff"
        android:id="@+id/grade_table_grade_scroll_view"
        android:layout_weight="1.5"
        android:layout_width="0dp"
        android:layout_height="match_parent">
        <LinearLayout
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/grade_table_grade_scroll_view_content"
            android:orientation="horizontal">
            <TableLayout
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:id="@+id/grade_table_table_layout">
                <!--<TextView android:text="Well that's an interesting question, and to be honest I don't really know why they call both methods in e.g. TextView. I thought that maybe they want to draw the View for the last time before they change its layout-related parameters, but it doesn't really make any sense if we think about those calls being invoked in the different order (and they call invalidate() right after requestLayout() in TextView as well). Maybe it deserves another question on StackOverflow :)?"/>-->
            </TableLayout>
        </LinearLayout>
    </HorizontalScrollView>
</LinearLayout>